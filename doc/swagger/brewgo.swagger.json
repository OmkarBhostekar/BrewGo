{
  "swagger": "2.0",
  "info": {
    "title": "order.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "OrderService"
    },
    {
      "name": "ProductService"
    },
    {
      "name": "UserService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/orders": {
      "post": {
        "summary": "Place an order product.",
        "description": "Use this API to place an order.",
        "operationId": "OrderService_PlaceOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/orderPlaceOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/orderPlaceOrderRequest"
            }
          }
        ],
        "tags": [
          "Order"
        ]
      }
    },
    "/v1/orders/{orderId}": {
      "get": {
        "summary": "Get order status.",
        "description": "Use this API to get order status.",
        "operationId": "OrderService_GetOrderStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/orderOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Order"
        ]
      },
      "patch": {
        "summary": "Update order status.",
        "description": "Use this API to update order status.",
        "operationId": "OrderService_FulfillOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/orderOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderServiceFulfillOrderBody"
            }
          }
        ],
        "tags": [
          "Order"
        ]
      }
    },
    "/v1/product": {
      "post": {
        "summary": "Create a add product.",
        "description": "Use this API to add a product.",
        "operationId": "ProductService_AddProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/productProduct"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/productAddProductRequest"
            }
          }
        ],
        "tags": [
          "Product"
        ]
      }
    },
    "/v1/product/category": {
      "get": {
        "summary": "List products by category.",
        "description": "Use this API to list products by category.",
        "operationId": "ProductService_SearchProductsByCategory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/productSearchProductsByNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "categoryName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Product"
        ]
      }
    },
    "/v1/product/search": {
      "get": {
        "summary": "Search products by name.",
        "description": "Use this API to search products by name.",
        "operationId": "ProductService_SearchProductsByName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/productSearchProductsByNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Product"
        ]
      }
    },
    "/v1/product/{productId}": {
      "get": {
        "summary": "Get a product.",
        "description": "Use this API to get a product.",
        "operationId": "ProductService_GetProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/productProduct"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Product"
        ]
      },
      "delete": {
        "summary": "Delete a product.",
        "description": "Use this API to delete a product.",
        "operationId": "ProductService_DeleteProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Product"
        ]
      },
      "patch": {
        "summary": "Update a product.",
        "description": "Use this API to update a product.",
        "operationId": "ProductService_UpdateProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/productProduct"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductServiceUpdateProductBody"
            }
          }
        ],
        "tags": [
          "Product"
        ]
      }
    },
    "/v1/users/create": {
      "post": {
        "summary": "Create a new user",
        "description": "Use this API to create a new user.",
        "operationId": "UserService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userCreateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userCreateUserRequest"
            }
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/v1/users/login": {
      "post": {
        "summary": "Login user",
        "description": "Use this API to login user.",
        "operationId": "UserService_LoginUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userLoginUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userLoginUserRequest"
            }
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/v1/users/search/{phoneNumber}": {
      "get": {
        "summary": "Get user by phone number",
        "description": "Use this API to get user by phone number.",
        "operationId": "UserService_GetUserByPhoneNumber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userGetUserByPhoneNumberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "phoneNumber",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/v1/users/{userId}": {
      "get": {
        "summary": "Get user by id",
        "description": "Use this API to get user by id.",
        "operationId": "UserService_GetUserById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userGetUserByPhoneNumberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "User"
        ]
      }
    }
  },
  "definitions": {
    "OrderServiceFulfillOrderBody": {
      "type": "object",
      "properties": {
        "orderStatus": {
          "type": "string"
        }
      }
    },
    "ProductServiceUpdateProductBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "float"
        },
        "category": {
          "type": "string"
        },
        "itemType": {
          "type": "string"
        },
        "isAvailable": {
          "type": "boolean"
        }
      }
    },
    "orderOrderItemResponse": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "integer",
          "format": "int32"
        },
        "productName": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "float"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "notes": {
          "type": "string"
        },
        "itemStatus": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "orderOrderResponse": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "integer",
          "format": "int32"
        },
        "orderStatus": {
          "type": "string"
        },
        "paymentMethod": {
          "type": "string"
        },
        "totalAmount": {
          "type": "number",
          "format": "float"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "orderItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/orderOrderItemResponse"
          }
        }
      }
    },
    "orderPlaceOrderItem": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "integer",
          "format": "int32"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "orderPlaceOrderRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "orderItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/orderPlaceOrderItem"
          }
        },
        "paymentMethod": {
          "type": "string"
        }
      }
    },
    "orderPlaceOrderResponse": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "integer",
          "format": "int32"
        },
        "orderStatus": {
          "type": "string"
        },
        "paymentMethod": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "orderItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/orderPlaceOrderItem"
          }
        }
      }
    },
    "productAddProductRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "float"
        },
        "category": {
          "type": "string"
        },
        "itemType": {
          "type": "string"
        }
      }
    },
    "productProduct": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "float"
        },
        "category": {
          "type": "string"
        },
        "isAvailable": {
          "type": "boolean"
        },
        "itemType": {
          "type": "string"
        },
        "estimatedPreparationTime": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "productSearchProductsByNameResponse": {
      "type": "object",
      "properties": {
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/productProduct"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "userCreateUserRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "userCreateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/userUser"
        }
      }
    },
    "userGetUserByPhoneNumberResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/userUser"
        }
      }
    },
    "userLoginUserRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "userLoginUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/userUser"
        },
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "accessTokenExpiresAt": {
          "type": "string",
          "format": "date-time"
        },
        "refreshTokenExpiresAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "userUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "passwordChangedAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "userValidateTokenResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "role": {
          "type": "string"
        }
      }
    }
  }
}
