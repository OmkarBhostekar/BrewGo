// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: orders.sql

package orders

import (
	"context"
)

const createOrder = `-- name: CreateOrder :one
INSERT INTO counter_orders(
    user_id,
    total_amount,
    payment_method
) VALUES (
    $1,
    $2,
    $3
) RETURNING id, user_id, order_date, total_amount, payment_method, order_status, created_at, updated_at
`

type CreateOrderParams struct {
	UserID        int32  `json:"user_id"`
	TotalAmount   string `json:"total_amount"`
	PaymentMethod string `json:"payment_method"`
}

func (q *Queries) CreateOrder(ctx context.Context, arg CreateOrderParams) (CounterOrder, error) {
	row := q.db.QueryRowContext(ctx, createOrder, arg.UserID, arg.TotalAmount, arg.PaymentMethod)
	var i CounterOrder
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.OrderDate,
		&i.TotalAmount,
		&i.PaymentMethod,
		&i.OrderStatus,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
